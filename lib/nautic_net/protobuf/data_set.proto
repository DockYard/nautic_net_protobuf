syntax = "proto3";
import "google/protobuf/timestamp.proto";
import "lib/nautic_net/protobuf/lora_packet.proto";

enum AngleReference {
  ANGLE_REFERENCE_NONE = 0;
  ANGLE_REFERENCE_TRUE_NORTH = 1;
  ANGLE_REFERENCE_MAGNETIC_MORTH = 2;
}

enum SpeedReference {
  SPEED_REFERENCE_NONE = 0;
  SPEED_REFERENCE_GROUND = 1;
  SPEED_REFERENCE_WATER = 2;
}

enum WindReference {
  WIND_REFERENCE_NONE = 0;
  WIND_REFERENCE_TRUE_NORTH = 1;
  WIND_REFERENCE_MAGNETIC_NORTH = 2;
  WIND_REFERENCE_APPARENT = 3;
  WIND_REFERENCE_BOAT_TRUE_NORTH = 4;
  WIND_REFERENCE_WATER_TRUE_NORTH = 5;
}

message DataSet {
  message DataPoint {
    google.protobuf.Timestamp timestamp = 1;
    uint32 hw_unique_number = 2;
  
    oneof sample {
      HeadingSample heading = 16;
      SpeedSample speed = 17;
      VelocitySample velocity = 18;
      WindVelocitySample wind_velocity = 19;
      WaterDepthSample water_depth = 20;
      PositionSample position = 21;
      TrackerSample tracker = 22;
    }
  }

  uint32 counter = 1;
  repeated DataPoint data_points = 2;
  string ref = 3;
  string boat_identifier = 4;
}

message HeadingSample {
  AngleReference angle_reference = 1;
  int32 angle_mrad = 2; // milliradians: fixed-point radians with 0.001 precision
}

message SpeedSample {
  SpeedReference speed_reference = 1;
  int32 speed_cm_s = 2; // centimeters per second: fixed-point m/s with 0.1 precision
}

message VelocitySample {
  SpeedReference speed_reference = 1;
  AngleReference angle_reference = 2;
  int32 speed_cm_s = 3; // centimeters per second: fixed-point m/s with 0.1 precision
  int32 angle_mrad = 4; // milliradians: fixed-point radians with 0.001 precision
}

message WindVelocitySample {
  WindReference wind_reference = 1;
  int32 speed_cm_s = 2; // centimeters per second: fixed-point m/s with 0.1 precision
  int32 angle_mrad = 3; // milliradians: fixed-point radians with 0.001 precision
}

message WaterDepthSample {
  int32 depth_cm = 1; // centimeters: fixed-point meters with 0.1 precision
}

message PositionSample {
  float latitude = 1; // degrees
  float longitude = 2; // degrees
}

message TrackerSample {
  sint32 rssi = 1; // dBm
  RoverData rover_data = 2;
}
