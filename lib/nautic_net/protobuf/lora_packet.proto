syntax = "proto3";

message LoRaPacket {
    // The fixed hardware identifier for the rover, based on the serial number of the ARM Cortex chip
    fixed32 hardware_id = 1;

    // A logical, human-friendly identifier for the rover
    uint32 serial_number = 5;

    // The packet contains one of these message types:
    oneof payload {
        RoverData rover_data = 2;
        RoverDiscovery rover_discovery = 3;
        RoverConfiguration rover_configuration = 4;
        RoverReset rover_reset = 6;
    }
}

// A sample of data from the rover
message RoverData {
    float latitude = 1; // degrees
    float longitude = 2; // degrees
    uint32 heading = 3; // degrees, fixed-point decimal with 0.1 precision
    uint32 heel = 4; // degrees, fixed-point decimal with 0.1 precision, 0 to 1800
    uint32 cog = 5; // degrees, fixed-point decimal with 0.1 precision, 0 to 3600
    uint32 sog = 6; // knots, fixed-point decimal with 0.1 precision
    uint32 battery = 7; // percent, 0 implies null
}

// Message from a newly-powered-on rover, asking base station for configuration
message RoverDiscovery {
}

// Message from the base station to a new rover, configuring it for communication
message RoverConfiguration {
    // TDMA slot numbers during which the rover is allowed to send RoverData
    repeated int32 slots = 1;

    // LoRa bandwidth (kHz) when sending RoverData
    uint32 sbw = 2;

    // LoRa spreading factor when sending RoverData
    uint32 sf = 3;
}

// Message from the base station telling a rover to soft-reset and attempt discovery again,
// useful for when the base station has just powered on to ensure that rovers are reinitialized
message RoverReset {
}
